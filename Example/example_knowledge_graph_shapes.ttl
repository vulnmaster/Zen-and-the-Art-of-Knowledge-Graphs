@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .

@prefix investigation: <https://ontology.caseontology.org/case/investigation/> .
@prefix icac-case:      <https://ontology.unifiedcyberontology.org/icac/case-management#> .
@prefix icac-forensics: <https://ontology.unifiedcyberontology.org/icac/forensics#> .
@prefix icac-physical-evidence: <https://ontology.unifiedcyberontology.org/icac/physical-evidence#> .
@prefix uco-observable: <https://ontology.unifiedcyberontology.org/uco/observable/> .
@prefix types:          <https://ontology.unifiedcyberontology.org/uco/types/> .

# Add UCO action and core prefixes for new shapes
@prefix uco-action: <https://ontology.unifiedcyberontology.org/uco/action/> .
@prefix uco-core: <https://ontology.unifiedcyberontology.org/uco/core/> .
@prefix uco-location: <https://ontology.unifiedcyberontology.org/uco/location/> .
@prefix icac-temporal: <https://ontology.unifiedcyberontology.org/icac/temporal#> .

#################################################################
# SHACL Shapes for "Example Knowledge Graph" validation
#################################################################

############################################
# Investigation container must have label + status
############################################
investigation:InvestigationShape
    a sh:NodeShape ;
    sh:targetClass investigation:Investigation ;
    sh:property [
        sh:path rdfs:label ;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:path investigation:investigationStatus ;
        sh:minCount 1 ;
    ] .

############################################
# Search-warrant authorization
############################################
icac-case:SearchWarrantShape
    a sh:NodeShape ;
    sh:targetClass icac-case:SearchWarrant ;
    sh:property [
        sh:path investigation:authorizationIdentifier ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path dcterms:issued ;
        sh:minCount 1 ;
        sh:datatype xsd:dateTime ;
    ] .

############################################
# Evidence seizure must specify seizedItem
############################################
icac-physical-evidence:EvidenceSeizureShape
    a sh:NodeShape ;
    sh:targetClass icac-physical-evidence:EvidenceSeizure ;
    sh:property [
        sh:path icac-physical-evidence:seizedItem ;
        sh:minCount 1 ;
    ] .

############################################
# Device imaging action must process evidence
############################################
icac-forensics:DeviceImagingShape
    a sh:NodeShape ;
    sh:targetClass icac-forensics:DeviceImaging ;
    sh:property [
        sh:path icac-forensics:processesEvidence ;
        sh:minCount 1 ;
    ] .

############################################
# New Shape: UCO Actions must have performer and startTime (for lifecycle traceability)
############################################
uco-action:ActionShape
    a sh:NodeShape ;
    sh:targetClass uco-action:Action ;
    sh:property [
        sh:path uco-action:performer ;  # Requires at least one performer (e.g., actor/organization)
        sh:minCount 1 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
    ] ;
    sh:property [
        sh:path uco-action:startTime ;  # Requires startTime for sequencing
        sh:minCount 1 ;
        sh:datatype xsd:dateTime ;
    ] ;
    sh:property [
        sh:path uco-action:endTime ;  # Optional but encouraged for complete lifecycles
        sh:minCount 0 ;
        sh:datatype xsd:dateTime ;
    ] ;
    sh:property [
        sh:path uco-action:instrument ;  # Optional tool/instrument
        sh:minCount 0 ;
    ] ;
    sh:property [
        sh:path uco-action:environment ;  # Optional location/environment
        sh:minCount 0 ;
    ] ;
    sh:property [
        sh:path uco-action:result ;  # Optional result (e.g., hash or provenance)
        sh:minCount 0 ;
    ] ;
    sh:property [
        sh:path icac-temporal:temporallyPrecedes ;  # Optional sequencing for action chains
        sh:minCount 0 ;
        sh:nodeKind sh:BlankNodeOrIRI ;
    ] .

############################################
# New Shape: Locations must have label or coordinates
############################################
uco-location:LocationShape
    a sh:NodeShape ;
    sh:targetClass uco-location:Location ;
    sh:or (
        [ sh:path rdfs:label ; sh:minCount 1 ; sh:datatype xsd:string ]
        [ sh:path uco-location:latitude ; sh:minCount 1 ; sh:datatype xsd:decimal ]
    ) .

############################################
# Files must carry a hash value
############################################
uco-observable:FileShape
    a sh:NodeShape ;
    sh:targetClass uco-observable:File ;
    sh:property [
        sh:path uco-observable:hash ;
        sh:minCount 1 ;
    ] .

############################################
# Hashes must have digest and hashMethod
############################################
types:HashShape
    a sh:NodeShape ;
    sh:targetClass types:Hash ;
    sh:property [
        sh:path types:digest ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path types:hashMethod ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
    ] . 